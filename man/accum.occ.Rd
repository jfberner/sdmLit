% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accum.occ.R
\name{accum.occ}
\alias{accum.occ}
\title{Accumulation of Occurrences Analysis and Plots}
\usage{
accum.occ(sp.name, output.mod, occ.pnts, null.mod, conlev = 0, bios = 0)
}
\arguments{
\item{sp.name}{character chain wiht species name, used for plot legends}

\item{output.mod}{Output from sdm_to_output.mod(). Alternatively, csv file with the following columns: long, lat, output values from SDM, environmental variables and as much rows as cells in the area of study}

\item{occ.pnts}{Output from sdm_to_occ.pnts(). Alternatively, csv file with same colums than 'output.mod' and as much rows as occurrence points.}

\item{null.mod}{indicate the distribution used as null model, possible values are "binomial" and "hypergeom".}

\item{conlev}{probability that indicates the confidence level to be drawn around the null model. When 'flag=F', 'conlev' must be equal to 0.}

\item{bios}{vector with two numbers that indicate which environmental variables to plot, if bios==0, the scatterplot pairs will be drawn}
}
\value{
Data Frame with accumulation of occurrences.
}
\description{
Function to evaluate Ecological Niche Models by the Accumulation of Occurrences of each algorithm \insertCite{jimenezLeavingAreaReceiving2020a}{sdmTools}.
}
\examples{
\dontrun{
#' # DO NOT RUN - Step by Step for loading model (from sdm package) data and applying the function
## Occurrence data ####
We'll only use the train data for the AOcCs
occ_train <- rgdal::readOGR('data/processed/shapefiles/train.shp')
## Environmental Data #####
envpres <- dir(path = 'data/processed/envcropped/Present/', pattern = ".tif$", full.names = T)
envpres <- raster::stack(envpres)
## Prediction Data #####
# Output from sdm::predict(), saved with terra and with full layer names
# retained before saving with names(p_occ) <- p_occ@z$fullname

pred_pres <- terra::rast(x = 'data/processed/model-build/predictions/
                         predictions.present-all-algorithms.tif')
# remember to read with terra:: to retain layer names
pred_pres <- raster::stack(pred_pres) # and then turn them into RasterStacks

## AOcCs of models #####
# Prepare the data to pass it onto the function:
occ.pnts <- sdm_to_occ.pnts(env = envpres,
                           occ = occ_train,
                           algorithms = c('svm', 'maxent', 'bioclim', 'domain'),
                           predict_object = pred_pres)

output.mod <- sdm_to_output.mods(env = envpres,
                                algorithms = c('svm', 'maxent', 'bioclim', 'domain'),
                                predict_object = pred_pres)
# The accum.occ function is annoying and creates three different plots in three different devices.
# To save them we'll use dev.print() in the reverse order in which they appear. I could automatize
# this part of the script but I don't have time for that, I'm sorry dear reader.

dev.new() ; dev.control('enable') ; dev.off() # Just enabling device control

# WARNING: Before running this next section of the script, make sure nothing
# is plotted and no devices are open with dev.list()

aocc_svm <- accum.occ(sp.name = 'Charinus',
                     output.mod = output.mod[[1]],
                     occ.pnts = occ.pnts[[1]],
                     null.mod = "hypergeom",
                     conlev = 0.05, bios = 0)

# To save the plots, we have to do it in the reverse order as they were plotted:
dev.print(png, file = "figs/aocc/svm_aocc_aocc.png",
          width=8, height=8, units="in", res=300);dev.off()

dev.print(png, file = "figs/aocc/svm_aocc_map.png",
          width=8, height=8, units="in", res=300);dev.off()

dev.print(png, file = "figs/aocc/svm_aocc_env.png",
          width=8, height=8, units="in", res=300);dev.off()
}
}
\references{
\insertRef{jimenezLeavingAreaReceiving2020a}{sdmTools}
}
\author{
Laura JimÃ©nez
}
